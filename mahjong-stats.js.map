{"version":3,"file":"mahjong-stats.js","sourceRoot":"","sources":["src/mahjong-stats.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property, query} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport '@material/web/select/outlined-select.js';\nimport '@material/web/select/select-option.js';\nimport {db} from './firestore';\nimport {collection, getDocs} from 'firebase/firestore/lite';\nimport {QueryDocumentSnapshot} from 'firebase/firestore/lite';\nimport './mahjong-versus';\n\n@customElement('mahjong-stats')\nexport class MahjongStats extends LitElement {\n  @property({type: Array})\n  distinctYears: number[] = [];\n  @property({type: Array})\n  totalPoints: {index: number; player: string; point: number}[] = [];\n  @property({type: Array})\n  maxPoints: {index: number; player: string; point: number}[] = [];\n  @property({type: Array})\n  avoidLast: {index: number; player: string; point: number}[] = [];\n  @property({type: Array})\n  yakumanList: {date: string; player: string; yakuman: string}[] = [];\n\n  static override styles = [\n    css`\n      md-outlined-select {\n        min-width: calc(50% - 1rem);\n      }\n      table {\n        border-collapse: collapse;\n        border-spacing: 0;\n        width: 100%;\n      }\n\n      table tr {\n        border-bottom: solid 1px #eee;\n        cursor: pointer;\n      }\n\n      table tr:hover {\n        background-color: #d4f0fd;\n      }\n\n      table th,\n      table td {\n        text-align: center;\n        width: 25%;\n        padding: 0.5em 0;\n      }\n    `,\n  ];\n  override render() {\n    return html`\n      <h1>総合成績</h1>\n      <md-outlined-select\n        required\n        id=\"gameType\"\n        class=\"mdc-select\"\n        @change=\"${this._changeGame}\"\n      >\n        <md-select-option selected value=\"四麻\">\n          <div slot=\"headline\">四麻</div>\n        </md-select-option>\n        <md-select-option value=\"三麻\">\n          <div slot=\"headline\">三麻</div>\n        </md-select-option>\n      </md-outlined-select>\n\n      <md-outlined-select\n        required\n        id=\"targetYear\"\n        @change=\"${this._changeYear}\"\n      >\n        <md-select-option selected>\n          ${new Date().getFullYear()}\n        </md-select-option>\n        ${map(this.distinctYears, (year: number) => {\n          const thisYear = new Date().getFullYear();\n          if (year === thisYear) {\n            return;\n          }\n          return html`<md-select-option value=\"${year}\"\n            >${year}</md-select-option\n          >`;\n        })}\n      </md-outlined-select>\n      <h2>総合ポイント</h2>\n      <table>\n        <tr>\n          <th>順位</th>\n          <th>プレイヤー</th>\n          <th>総合ポイント</th>\n        </tr>\n        ${map(this.totalPoints, (p) => {\n          return html`\n            <tr>\n              <td>${p.index}</td>\n              <td>${p.player}</td>\n              <td>${Math.round(p.point * 10) / 10}</td>\n            </tr>\n          `;\n        })}\n      </table>\n      <h2>最高ポイント</h2>\n      <table>\n        <tr>\n          <th>順位</th>\n          <th>プレイヤー</th>\n          <th>最高ポイント</th>\n        </tr>\n        ${map(this.maxPoints, (p) => {\n          return html`\n            <tr>\n              <td>${p.index}</td>\n              <td>${p.player}</td>\n              <td>${p.point}</td>\n            </tr>\n          `;\n        })}\n      </table>\n      <h2>ラス回避率</h2>\n      <table>\n        <tr>\n          <th>順位</th>\n          <th>プレイヤー</th>\n          <th>ラス回避率</th>\n        </tr>\n        ${map(this.avoidLast, (p) => {\n          return html`\n            <tr>\n              <td>${p.index}</td>\n              <td>${p.player}</td>\n              <td>${p.point}%</td>\n            </tr>\n          `;\n        })}\n      </table>\n      <h2>役満</h2>\n      <table>\n        ${this.yakumanList.length === 0\n          ? html`<tr>\n              <td>なし</td>\n            </tr>`\n          : html`\n              <tr>\n                <th>日付</th>\n                <th>プレイヤー</th>\n                <th>役満</th>\n              </tr>\n            `}\n        ${map(this.yakumanList, (yakuman) => {\n          return html`\n            <tr>\n              <td>${yakuman.date}</td>\n              <td>${yakuman.player}</td>\n              <td>${yakuman.yakuman}</td>\n            </tr>\n          `;\n        })}\n      </table>\n      <mahjong-versus></mahjong-versus>\n    `;\n  }\n\n  @query('#gameType')\n  _gameType!: HTMLSelectElement;\n  @query('#targetYear')\n  _targetYear!: HTMLSelectElement;\n  @query('mahjong-versus')\n  _versus!: HTMLElementTagNameMap['mahjong-versus'];\n\n  constructor() {\n    super();\n    this._loadData();\n  }\n\n  private async _changeGame() {\n    await this._loadData();\n    this._updateVersusData();\n  }\n\n  private async _changeYear() {\n    await this._loadData();\n    this._updateVersusData();\n  }\n\n  private _updateVersusData() {\n    const gameType = this._gameType.value || '四麻';\n    const targetYear =\n      Number(this._targetYear.value) || new Date().getFullYear();\n    this._versus?.updateData(gameType, targetYear);\n  }\n\n  private async _loadData() {\n    const querySnapshot = await getDocs(collection(db, 'results'));\n    const docs = querySnapshot.docs;\n\n    const allResults: Result[] = [];\n    const allChonbo: Chonbo[] = [];\n    const allYakuman: YakumanWithDate[] = [];\n    const gameType = this._gameType.value || '四麻';\n    const targetYear =\n      Number(this._targetYear.value) || new Date().getFullYear();\n    docs.forEach((doc) => {\n      // ゲームタイプと年が一致するデータのみを抽出\n      if (\n        doc.data().gameInfo.gameType !== gameType ||\n        new Date(doc.data().gameInfo.date).getFullYear() !== targetYear\n      ) {\n        return;\n      }\n      const results = doc.data().results;\n      allResults.push(...results);\n      const chonbo = doc.data().chonbo;\n      if (chonbo?.length > 0) {\n        allChonbo.push(...chonbo);\n      }\n      const yakuman = doc.data().yakuman;\n      if (yakuman?.length > 0) {\n        const yakumanWithDate = yakuman.map((yakuman: Yakuman) => {\n          return {...yakuman, date: doc.data().gameInfo.date};\n        });\n        allYakuman.push(...yakumanWithDate);\n      }\n    });\n    this._setDistinctYears(docs);\n    this._setTotalPoint(allResults, allChonbo);\n    this._setMaxPoint(allResults);\n    this._setAvoidLast(allResults);\n    this._setYakuman(allYakuman);\n  }\n\n  private _setDistinctYears(docs: QueryDocumentSnapshot[]) {\n    const years = docs.map((doc) =>\n      new Date(doc.data().gameInfo.date).getFullYear()\n    );\n    const distinctYears = [...new Set(years)];\n    this.distinctYears = distinctYears;\n  }\n\n  private _setTotalPoint(allResults: Result[], allChonbo: Chonbo[]) {\n    const playerMap = new Map<string, number>();\n\n    allResults.forEach((result) => {\n      const {player, point} = result;\n      if (playerMap.has(player)) {\n        const currentPoints = playerMap.get(player) || 0;\n        // JSでは小数の計算が正確に行われないため、10倍して計算後に10で割る\n        const updatedPoints = (currentPoints * 10 + point * 10) / 10;\n        playerMap.set(player, updatedPoints);\n      } else {\n        playerMap.set(player, point);\n      }\n    });\n\n    // チョンボのマイナスポイントを適用\n    allChonbo.forEach((chonbo) => {\n      const {player, point} = chonbo;\n      if (playerMap.has(player)) {\n        const currentPoints = playerMap.get(player) || 0;\n        const updatedPoints = (currentPoints * 10 + point * 10) / 10;\n        playerMap.set(player, updatedPoints);\n      }\n    });\n\n    const sortedPlayers = Array.from(playerMap.entries()).sort(\n      (a, b) => b[1] - a[1]\n    );\n    this.totalPoints = sortedPlayers.map((v, i) => {\n      return {index: i + 1, player: v[0], point: v[1]};\n    });\n  }\n\n  private _setMaxPoint(allResults: Result[]) {\n    const playerMap = new Map<string, number>();\n\n    allResults.forEach((result) => {\n      const {player, point} = result;\n      if (playerMap.has(player)) {\n        const currentPoints = playerMap.get(player) || 0;\n        if (point > currentPoints) {\n          playerMap.set(player, Number(point.toFixed(1)));\n        }\n      } else {\n        playerMap.set(player, Number(point.toFixed(1)));\n      }\n    });\n\n    const sortedPlayers = Array.from(playerMap.entries()).sort(\n      (a, b) => b[1] - a[1]\n    );\n\n    this.maxPoints = sortedPlayers.map((v, i) => {\n      return {index: i + 1, player: v[0], point: v[1]};\n    });\n  }\n\n  private _setAvoidLast(allResults: Result[]) {\n    const playerMap = new Map<string, {plays: number; last: number}>();\n    const last = this._gameType.value === '四麻' ? 4 : 3;\n\n    allResults.forEach((result) => {\n      const {player, rank} = result;\n      if (playerMap.has(player)) {\n        const current = playerMap.get(player) || {plays: 0, last: 0};\n        if (rank === last) {\n          playerMap.set(player, {\n            plays: current.plays + 1,\n            last: current.last + 1,\n          });\n        } else {\n          playerMap.set(player, {\n            plays: current.plays + 1,\n            last: current.last,\n          });\n        }\n      } else {\n        if (rank === last) {\n          playerMap.set(player, {plays: 1, last: 1});\n        } else {\n          playerMap.set(player, {plays: 1, last: 0});\n        }\n      }\n    });\n\n    const sortedPlayers = Array.from(playerMap.entries()).sort(\n      (a, b) => a[1].last / a[1].plays - b[1].last / b[1].plays\n    );\n\n    this.avoidLast = sortedPlayers.map((v, i) => {\n      return {\n        index: i + 1,\n        player: v[0],\n        point: Math.round((100 - (v[1].last / v[1].plays) * 100) * 10) / 10,\n      };\n    });\n  }\n\n  private _setYakuman(allYakuman: YakumanWithDate[]) {\n    this.yakumanList = allYakuman;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mahjong-stats': MahjongStats;\n  }\n}\n"]}