{"version":3,"file":"mahjong-versus.js","sourceRoot":"","sources":["src/mahjong-versus.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property, query} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\n\nimport '@material/web/select/outlined-select.js';\nimport '@material/web/select/select-option.js';\nimport {db} from './firestore';\nimport {collection, getDocs} from 'firebase/firestore/lite';\n\ninterface VersusData {\n  player1: string;\n  player2: string;\n  games: number;\n  pointDiff: number;\n}\n\n@customElement('mahjong-versus')\nexport class MahjongVersus extends LitElement {\n  @property({type: Array})\n  players: string[] = [];\n  @property({type: Array})\n  versusData: VersusData[] = [];\n  @property({type: String})\n  gameType = '四麻';\n  @property({type: Number})\n  targetYear: number = new Date().getFullYear();\n\n  static override styles = css`\n    .versus-table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 1rem;\n    }\n    .versus-table th,\n    .versus-table td {\n      border: 1px solid #ddd;\n      padding: 8px;\n      text-align: center;\n      min-width: 80px;\n    }\n    .versus-table th {\n      background-color: #f5f5f5;\n    }\n    .positive {\n      color: #2196f3;\n    }\n    .negative {\n      color: #f44336;\n    }\n  `;\n\n  override render() {\n    return html`\n      <h2>対戦成績</h2>\n\n      <table class=\"versus-table\">\n        <tr>\n          <th></th>\n          ${map(\n            this.players,\n            (player) => html`<th>${player}</th>`\n          )}\n        </tr>\n        ${map(this.players, (player1) => html`\n          <tr>\n            <th>${player1}</th>\n            ${map(this.players, (player2) => {\n              if (player1 === player2) {\n                return html`<td>-</td>`;\n              }\n              const data = this.versusData.find(\n                (d) =>\n                  (d.player1 === player1 && d.player2 === player2) ||\n                  (d.player1 === player2 && d.player2 === player1)\n              );\n              if (!data) {\n                return html`<td>-</td>`;\n              }\n              const pointDiff =\n                data.player1 === player1 ? data.pointDiff : -data.pointDiff;\n              return html`\n                <td class=\"${pointDiff > 0 ? 'positive' : 'negative'}\">\n                  ${pointDiff.toFixed(1)}\n                  <br>\n                  (${data.games}戦)\n                </td>\n              `;\n            })}\n          </tr>\n        `)}\n      </table>\n    `;\n  }\n\n  @query('#gameType')\n  _gameType!: HTMLSelectElement;\n\n  constructor() {\n    super();\n    this._loadData();\n  }\n\n  public updateData(gameType: string, targetYear: number) {\n    this.gameType = gameType;\n    this.targetYear = targetYear;\n    this._loadData();\n  }\n\n  private async _loadData() {\n    const querySnapshot = await getDocs(collection(db, 'results'));\n    const docs = querySnapshot.docs;\n\n    // 指定された年とゲームタイプでフィルタリング\n    const filteredDocs = docs.filter((doc) => {\n      const data = doc.data();\n      return (\n        data.gameInfo.gameType === this.gameType &&\n        new Date(data.gameInfo.date).getFullYear() === this.targetYear\n      );\n    });\n\n    // プレイヤー一覧を取得\n    const allPlayers: string[] = [];\n    filteredDocs.forEach((doc) => {\n      const players = doc.data().gameInfo.players;\n      allPlayers.push(...players);\n    });\n    this.players = [...new Set(allPlayers)];\n\n    // 対戦成績を計算\n    const versusData: VersusData[] = [];\n    for (let i = 0; i < this.players.length; i++) {\n      for (let j = i + 1; j < this.players.length; j++) {\n        const player1 = this.players[i];\n        const player2 = this.players[j];\n\n        // 両プレイヤーが参加したゲームを抽出\n        const commonGames = filteredDocs.filter((doc) => {\n          const data = doc.data();\n          return (\n            data.gameInfo.players.includes(player1) &&\n            data.gameInfo.players.includes(player2)\n          );\n        });\n\n        if (commonGames.length > 0) {\n          let pointDiff = 0;\n          commonGames.forEach((doc) => {\n            const results = doc.data().results;\n            const player1Result = results.find(\n              (r: any) => r.player === player1\n            );\n            const player2Result = results.find(\n              (r: any) => r.player === player2\n            );\n            pointDiff += player1Result.point - player2Result.point;\n          });\n\n          versusData.push({\n            player1,\n            player2,\n            games: commonGames.length,\n            pointDiff,\n          });\n        }\n      }\n    }\n\n    this.versusData = versusData;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mahjong-versus': MahjongVersus;\n  }\n}"]}