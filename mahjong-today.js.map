{"version":3,"file":"mahjong-today.js","sourceRoot":"","sources":["src/mahjong-today.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {query, property} from 'lit/decorators.js';\nimport {customElement} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport '@material/web/textfield/outlined-text-field.js';\nimport '@material/web/textfield/filled-text-field.js';\nimport '@material/web/select/outlined-select.js';\nimport '@material/web/select/select-option.js';\nimport '@material/web/button/filled-tonal-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/progress/circular-progress.js';\nimport '@patternfly/elements/pf-accordion/pf-accordion.js';\nimport {db} from './firestore';\nimport {collection, getDocs} from 'firebase/firestore/lite';\nimport {QueryDocumentSnapshot} from 'firebase/firestore/lite';\nimport {OutlinedSelect} from '@material/web/select/internal/outlined-select';\n\n@customElement('mahjong-today')\nexport class MahjongToday extends LitElement {\n  @property({type: Array})\n  distinctDates: string[] = [];\n  @property({type: Array})\n  todaysResultsList: {date: string, order: number, results: Result[]}[] = [];\n  @property({attribute: false})\n  playerPoints: Map<string, number> = new Map();\n  @property({type: Array})\n  todaysChonbo: Chonbo[][] = [];\n  @property({type: Array})\n  todaysYakuman: Yakuman[][] = [];\n\n  static override styles = [\n    css`\n      md-outlined-select {\n        min-width: calc(50% - 1rem);\n      }\n      .rank-1 {\n        font-weight: bold;\n      }\n\n      .table-box {\n        overflow-x: auto;\n      }\n\n      table {\n        border-collapse: collapse;\n        border-spacing: 0;\n        width: 100%;\n      }\n\n      table tr {\n        border-bottom: solid 1px #eee;\n        cursor: pointer;\n      }\n\n      table tr:hover {\n        background-color: #d4f0fd;\n      }\n\n      table th {\n        background-color: #eee;\n      }\n\n      table th,\n      table td {\n        text-align: center;\n        padding: 0.5em 0;\n        min-width: 4em;\n      }\n    `,\n  ];\n\n  override render() {\n    return html`\n      <h1>今日の成績</h1>\n\n      <md-outlined-select required id=\"gameType\" @change=\"${this._changeGame}\">\n        <md-select-option selected value=\"四麻\">\n          <div slot=\"headline\">四麻</div>\n        </md-select-option>\n        <md-select-option value=\"三麻\">\n          <div slot=\"headline\">三麻</div>\n        </md-select-option>\n      </md-outlined-select>\n\n      <md-outlined-select required id=\"date\" @change=\"${this._changeDate}\">\n        ${map(this.distinctDates, (date: string) => {\n          return html`<md-select-option value=\"${date}\"\n            >${date}</md-select-option\n          > `;\n        })}\n      </md-outlined-select>\n\n      <h2>ゲームごとのポイント</h2>\n      <table>\n        ${(() => {\n          let prevMembers = '';\n          return this.todaysResultsList.map((game) => {\n            const members = game.results.map((r: Result) => r.player).join(',');\n            const showHeader = members !== prevMembers;\n            prevMembers = members;\n            return html`\n              ${showHeader ? html`<thead><tr>${game.results.map((result: Result) => html`<th>${result.player}</th>`)}</tr></thead>` : ''}\n              <tbody>\n                <tr>\n                  ${game.results.map((result) => html`\n                    <td class=\"rank-${result.rank}\">\n                      ${Math.round(result.point * 10) / 10}(${result.rank})\n                    </td>\n                  `)}\n                </tr>\n              </tbody>\n            `;\n          });\n        })()}\n      </table>\n\n      <h2>合計</h2>\n      <div class=\"table-box\">\n        <table>\n          <thead>\n            <tr>\n              ${map(\n                Array.from(this.playerPoints.entries()),\n                ([player, _point]) => {\n                  return html` <th>${player}</th> `;\n                }\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              ${map(\n                Array.from(this.playerPoints.entries()),\n                ([_player, point]) => {\n                  return html` <td>${Math.round(point * 10) / 10}</td> `;\n                }\n              )}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <h2>役満</h2>\n      ${this.todaysYakuman.length === 0 ? html`<p>なし</p>` : ''}\n      <table>\n        ${map(this.todaysYakuman, (yakumanArray: Yakuman[]) => {\n          return html`\n            <thead>\n              <tr>\n                ${yakumanArray.map((yakuman) => {\n                  return html` <th>${yakuman.player}</th> `;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                ${yakumanArray.map((yakuman) => {\n                  return html` <td>${yakuman.yakuman}</td> `;\n                })}\n              </tr>\n            </tbody>\n          `;\n        })}\n      </table>\n\n      <h2>チョンボ</h2>\n      ${this.todaysChonbo.length === 0 ? html`<p>なし</p>` : ''}\n      <table>\n        <thead>\n          <tr>\n            ${(() => {\n              // 全チョンボを合算\n              const chonboMap = new Map<string, number>();\n              this.todaysChonbo.flat().forEach((chonbo: Chonbo) => {\n                chonboMap.set(chonbo.player, (chonboMap.get(chonbo.player) || 0) + chonbo.point);\n              });\n              return Array.from(chonboMap.keys()).map(player => html`<th>${player}</th>`);\n            })()}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            ${(() => {\n              const chonboMap = new Map<string, number>();\n              this.todaysChonbo.flat().forEach((chonbo: Chonbo) => {\n                chonboMap.set(chonbo.player, (chonboMap.get(chonbo.player) || 0) + chonbo.point);\n              });\n              return Array.from(chonboMap.values()).map(point => html`<td>${point}</td>`);\n            })()}\n          </tr>\n        </tbody>\n      </table>\n    `;\n  }\n\n  @query('#gameType')\n  _gameType!: HTMLSelectElement;\n  @query('#date')\n  _date!: OutlinedSelect;\n\n  constructor() {\n    super();\n    this.startup();\n  }\n\n  private async startup() {\n    await this._loadData();\n    // 初期は日付を最新年月日にする\n    const currentYear = new Date().getFullYear().toString();\n    const defaultDate = this.distinctDates[0] === currentYear ? this.distinctDates[1] : this.distinctDates[0];\n    this._date.selectedIndex = this.distinctDates.indexOf(defaultDate);\n    this._date.displayText = defaultDate;\n  }\n\n  private async _changeGame() {\n    // gameTypeを変えた場合は日付をリセットする\n    this._date.value = '';\n    await this._loadData();\n    const currentYear = new Date().getFullYear().toString();\n    const defaultDate = this.distinctDates[0] === currentYear ? this.distinctDates[1] : this.distinctDates[0];\n    this._date.selectedIndex = this.distinctDates.indexOf(defaultDate);\n    this._date.displayText = defaultDate;\n  }\n\n  private _changeDate() {\n    this._loadData();\n  }\n  private async _loadData() {\n    this.todaysResultsList = [];\n    this.todaysChonbo = [];\n    this.todaysYakuman = [];\n\n    const querySnapshot = await getDocs(collection(db, 'results'));\n    const docs = querySnapshot.docs;\n    \n    const gameType = this._gameType.value || '四麻';\n    this._setDistinctDates(docs, gameType);\n\n    const currentYear = new Date().getFullYear().toString();\n    // デフォルトは最新年月日（distinctDates[1]が存在すればそれを使う）\n    const defaultDate = this.distinctDates[0] === currentYear ? this.distinctDates[1] : this.distinctDates[0];\n    const targetDate = this._date.value || defaultDate;\n    this._date.value = targetDate;\n    this._date.selectedIndex = this.distinctDates.indexOf(targetDate);\n    this._date.displayText = targetDate;\n\n    // docs.sort((a, b) => {\n    //   return a.data().gameInfo.order < b.data().gameInfo.order ? -1 : 1;\n    // });\n    // 表示用に、日付と順序キーで昇順ソート\n    docs.sort((a, b) => {\n      const dateA = a.data().gameInfo.date;\n      const dateB = b.data().gameInfo.date;\n      if (dateA !== dateB) {\n        return dateA < dateB ? -1 : 1;\n      }\n      // 日付が同じ場合はorderで昇順\n      return a.data().gameInfo.order - b.data().gameInfo.order;\n    });\n\n    const playerPoints = new Map<string, number>();\n    docs.forEach((doc) => {\n      // ゲームタイプが一致しない場合はスキップ\n      if (doc.data().gameInfo.gameType !== gameType) {\n        return;\n      }\n      // 「現在年」選択時はその年の全データを対象に\n      if (\n        (targetDate !== currentYear && doc.data().gameInfo.date !== targetDate) ||\n        (targetDate === currentYear && !doc.data().gameInfo.date.startsWith(currentYear))\n      ) {\n        return;\n      }\n      const results = doc.data().results.sort((a: Result, b: Result) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      // 配列に格納\n      this.todaysResultsList.push({\n        date: doc.data().gameInfo.date,\n        order: doc.data().gameInfo.order,\n        results\n      });\n      // プレイヤーごとのポイントを計算\n      results.forEach((result: Result) => {\n        const point = playerPoints.get(result.player) || 0;\n        playerPoints.set(result.player, point + result.point);\n      });\n      // チョンボ\n      const chonbo = doc.data().chonbo?.sort((a: Chonbo, b: Chonbo) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      if (chonbo?.length > 0) {\n        this.todaysChonbo.push(chonbo);\n      }\n      // 役満\n      const yakuman = doc.data().yakuman?.sort((a: Yakuman, b: Yakuman) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      if (yakuman?.length > 0) {\n        this.todaysYakuman.push(yakuman);\n      }\n    });\n    // プレイヤーごとのポイントをポイント順にソートして保存\n    this.playerPoints = new Map(\n      Array.from(playerPoints).sort((a, b) => {\n        return a[1] < b[1] ? 1 : -1;\n      })\n    );\n  }\n\n  private _setDistinctDates(docs: QueryDocumentSnapshot[], gameType: string) {\n    this.distinctDates = [];\n    const dates = docs.map((doc) => {\n      if (doc.data().gameInfo.gameType !== gameType) {\n        return '';\n      }\n      return doc.data().gameInfo.date;\n    });\n    const distinctDates = [...new Set(dates)].filter((d) => d);\n    distinctDates.sort((a: string, b: string) => (a < b ? 1 : -1));\n    // 現在年を先頭に追加\n    const currentYear = new Date().getFullYear().toString();\n    this.distinctDates = [currentYear, ...distinctDates];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mahjong-today': MahjongToday;\n  }\n}\n"]}