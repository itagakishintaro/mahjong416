{"version":3,"file":"mahjong-today.js","sourceRoot":"","sources":["src/mahjong-today.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {query, property} from 'lit/decorators.js';\nimport {customElement} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport '@material/web/textfield/outlined-text-field.js';\nimport '@material/web/textfield/filled-text-field.js';\nimport '@material/web/select/outlined-select.js';\nimport '@material/web/select/select-option.js';\nimport '@material/web/button/filled-tonal-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/progress/circular-progress.js';\nimport '@patternfly/elements/pf-accordion/pf-accordion.js';\nimport {db} from './firestore';\nimport {collection, getDocs} from 'firebase/firestore/lite';\nimport {QueryDocumentSnapshot} from 'firebase/firestore/lite';\n\n@customElement('mahjong-today')\nexport class MahjongToday extends LitElement {\n  @property({type: Array})\n  distinctDates: string[] = [];\n  @property({type: Array})\n  todaysResults: Result[][] = [];\n  @property({attribute: false})\n  playerPoints: Map<string, number> = new Map();\n\n  static override styles = [\n    css`\n      md-outlined-select {\n        min-width: calc(50% - 1rem);\n      }\n      .rank-1 {\n        font-weight: bold;\n      }\n\n      table {\n        border-collapse: collapse;\n        border-spacing: 0;\n        width: 100%;\n      }\n\n      table tr {\n        border-bottom: solid 1px #eee;\n        cursor: pointer;\n      }\n\n      table tr:hover {\n        background-color: #d4f0fd;\n      }\n\n      table th,\n      table td {\n        text-align: center;\n        width: 25%;\n        padding: 1em 0;\n      }\n    `,\n  ];\n\n  override render() {\n    return html`\n      <h1>今日の成績</h1>\n\n      <md-outlined-select required id=\"gameType\" @change=\"${this._changeGame}\">\n        <md-select-option selected value=\"四麻\">\n          <div slot=\"headline\">四麻</div>\n        </md-select-option>\n        <md-select-option value=\"三麻\">\n          <div slot=\"headline\">三麻</div>\n        </md-select-option>\n      </md-outlined-select>\n\n      <md-outlined-select required id=\"date\" @change=\"${this._changeDate}\">\n        <md-select-option selected value=\"${new Date().toISOString().split('T')[0]}\">${new Date().toISOString().split('T')[0]}</md-select-option>\n        ${map(this.distinctDates, (date: string) => {\n          const today = new Date().toISOString().split('T')[0];\n          if (date === today) {\n            return '';\n          }\n          return html`<md-select-option\n            value=\"${date}\"\n            >${date}</md-select-option>\n          `;\n        })}\n      </md-outlined-select>\n\n      <h2>ゲームごとのポイント</h2>\n      <table>\n        <thead>\n          <tr>\n            ${map(this.todaysResults[0], (result: Result) => {\n              return html` <th>${result.player}</th> `;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          ${map(this.todaysResults, (resultArray: Result[]) => {\n            return html`<tr>\n              ${resultArray.map((result) => {\n                return html`\n                  <td class=\"rank-${result.rank}\">\n                    ${Math.round(result.point * 10) / 10}(${result.rank})\n                  </td>\n                `;\n              })}\n            </tr>`;\n          })}\n        </tbody>\n      </table>\n\n      <h2>合計</h2>\n      <table>\n        <thead>\n          <tr>\n          ${map(Array.from(this.playerPoints.entries()), ([player, _point]) => {\n          return html`\n              <th>${player}</th>\n          `;})}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n        ${map(Array.from(this.playerPoints.entries()), ([_player, point]) => {\n          return html`\n              <td>${Math.round(point * 10) / 10}</td>\n          `;\n        })}\n          </tr>\n        </tbody>\n      </table>\n    `;\n  }\n\n  @query('#gameType')\n  _gameType!: HTMLSelectElement;\n  @query('#date')\n  _date!: HTMLSelectElement;\n\n  constructor() {\n    super();\n    this._loadData();\n  }\n\n  private _changeGame() {\n    this._loadData();\n  }\n\n  private _changeDate() {\n    this._loadData();\n  }\n  private async _loadData() {\n    const querySnapshot = await getDocs(collection(db, 'results'));\n    const docs = querySnapshot.docs;\n    this.todaysResults = [];\n    const gameType = this._gameType.value || '四麻';\n    const targetDate =\n      this._date.value || new Date().toISOString().split('T')[0];\n    docs.sort((a, b) => {\n      return a.data().gameInfo.order < b.data().gameInfo.order ? -1 : 1;\n    });\n    docs.forEach((doc) => {\n      // ゲームタイプと日付が一致するデータのみを抽出\n      if (\n        doc.data().gameInfo.gameType !== gameType ||\n        doc.data().gameInfo.date !== targetDate\n      ) {\n        return;\n      }\n      const results = doc.data().results.sort((a: Result, b: Result) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      this.todaysResults.push(results);\n    });\n    console.log(this.todaysResults);\n    // this.todaysResultsのplayerごとのpointの合計を計算する\n    const playerPoints = new Map<string, number>();\n    this.todaysResults.forEach((results) => {\n      results.forEach((result) => {\n        const point = playerPoints.get(result.player) || 0;\n        playerPoints.set(result.player, point + result.point);\n      });\n    });\n    this.playerPoints = playerPoints;\n    console.log(playerPoints);\n    this._setDistinctDates(docs);\n  }\n\n  private _setDistinctDates(docs: QueryDocumentSnapshot[]) {\n    const dates = docs.map((doc) => doc.data().gameInfo.date);\n    const distinctDates = [...new Set(dates)];\n    this.distinctDates = distinctDates.sort((a: string, b: string) => {\n      return a < b ? 1 : -1;\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mahjong-today': MahjongToday;\n  }\n}\n"]}