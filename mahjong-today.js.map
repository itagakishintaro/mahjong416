{"version":3,"file":"mahjong-today.js","sourceRoot":"","sources":["src/mahjong-today.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {query, property} from 'lit/decorators.js';\nimport {customElement} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport '@material/web/textfield/outlined-text-field.js';\nimport '@material/web/textfield/filled-text-field.js';\nimport '@material/web/select/outlined-select.js';\nimport '@material/web/select/select-option.js';\nimport '@material/web/button/filled-tonal-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/progress/circular-progress.js';\nimport '@patternfly/elements/pf-accordion/pf-accordion.js';\nimport {db} from './firestore';\nimport {collection, getDocs} from 'firebase/firestore/lite';\nimport {QueryDocumentSnapshot} from 'firebase/firestore/lite';\nimport {OutlinedSelect} from '@material/web/select/internal/outlined-select';\n\n@customElement('mahjong-today')\nexport class MahjongToday extends LitElement {\n  @property({type: Array})\n  distinctDates: string[] = [];\n  @property({type: Object})\n  todaysResults: Map<string, Result[][]> = new Map();\n  @property({attribute: false})\n  playerPoints: Map<string, number> = new Map();\n  @property({type: Array})\n  todaysChonbo: Chonbo[][] = [];\n  @property({type: Array})\n  todaysYakuman: Yakuman[][] = [];\n\n  static override styles = [\n    css`\n      md-outlined-select {\n        min-width: calc(50% - 1rem);\n      }\n      .rank-1 {\n        font-weight: bold;\n      }\n\n      .table-box {\n        overflow-x: auto;\n      }\n\n      table {\n        border-collapse: collapse;\n        border-spacing: 0;\n        width: 100%;\n      }\n\n      table tr {\n        border-bottom: solid 1px #eee;\n        cursor: pointer;\n      }\n\n      table tr:hover {\n        background-color: #d4f0fd;\n      }\n\n      table th {\n        background-color: #eee;\n      }\n\n      table th,\n      table td {\n        text-align: center;\n        padding: 0.5em 0;\n        min-width: 4em;\n      }\n    `,\n  ];\n\n  override render() {\n    return html`\n      <h1>今日の成績</h1>\n\n      <md-outlined-select required id=\"gameType\" @change=\"${this._changeGame}\">\n        <md-select-option selected value=\"四麻\">\n          <div slot=\"headline\">四麻</div>\n        </md-select-option>\n        <md-select-option value=\"三麻\">\n          <div slot=\"headline\">三麻</div>\n        </md-select-option>\n      </md-outlined-select>\n\n      <md-outlined-select required id=\"date\" @change=\"${this._changeDate}\">\n        ${map(this.distinctDates, (date: string) => {\n          return html`<md-select-option value=\"${date}\"\n            >${date}</md-select-option\n          > `;\n        })}\n      </md-outlined-select>\n\n      <h2>ゲームごとのポイント</h2>\n      <table>\n        ${map(this.todaysResults.keys(), (players: string) => {\n          return html`\n            <thead>\n              <tr>\n                ${map(this.todaysResults.get(players)![0], (result: Result) => {\n                  return html` <th>${result.player}</th> `;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              ${map(\n                this.todaysResults.get(players),\n                (resultArray: Result[]) => {\n                  return html`<tr>\n                    ${resultArray.map((result) => {\n                      return html`\n                        <td class=\"rank-${result.rank}\">\n                          ${Math.round(result.point * 10) / 10}(${result.rank})\n                        </td>\n                      `;\n                    })}\n                  </tr>`;\n                }\n              )}\n            </tbody>\n          `;\n        })}\n      </table>\n\n      <h2>合計</h2>\n      <div class=\"table-box\">\n        <table>\n          <thead>\n            <tr>\n              ${map(\n                Array.from(this.playerPoints.entries()),\n                ([player, _point]) => {\n                  return html` <th>${player}</th> `;\n                }\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              ${map(\n                Array.from(this.playerPoints.entries()),\n                ([_player, point]) => {\n                  return html` <td>${Math.round(point * 10) / 10}</td> `;\n                }\n              )}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <h2>役満</h2>\n      <table>\n        ${map(this.todaysYakuman, (yakumanArray: Yakuman[]) => {\n          return html`\n            <thead>\n              <tr>\n                ${yakumanArray.map((yakuman) => {\n                  return html` <th>${yakuman.player}</th> `;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                ${yakumanArray.map((yakuman) => {\n                  return html` <td>${yakuman.yakuman}</td> `;\n                })}\n              </tr>\n            </tbody>\n          `;\n        })}\n      </table>\n\n      <h2>チョンボ</h2>\n      <table>\n        ${map(this.todaysChonbo, (chonboArray: Chonbo[]) => {\n          return html`\n            <thead>\n              <tr>\n                ${chonboArray.map((chonbo) => {\n                  return html` <th>${chonbo.player}</th> `;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                ${chonboArray.map((chonbo) => {\n                  return html` <td>${chonbo.point}</td> `;\n                })}\n              </tr>\n            </tbody>\n          `;\n        })}\n      </table>\n    `;\n  }\n\n  @query('#gameType')\n  _gameType!: HTMLSelectElement;\n  @query('#date')\n  _date!: OutlinedSelect;\n\n  constructor() {\n    super();\n    this.startup();\n  }\n\n  private async startup() {\n    await this._loadData();\n    // 初期は日付を最新の日付にする\n    this._date.selectedIndex = 0;\n    this._date.displayText = this.distinctDates[0];\n  }\n\n  private async _changeGame() {\n    // gameTypeを変えた場合は日付をリセットする\n    this._date.value = '';\n    await this._loadData();\n    this._date.selectedIndex = 0;\n    this._date.displayText = this.distinctDates[0];\n  }\n\n  private _changeDate() {\n    this._loadData();\n  }\n  private async _loadData() {\n    this.todaysResults = new Map();\n    this.todaysChonbo = [];\n    this.todaysYakuman = [];\n\n    const querySnapshot = await getDocs(collection(db, 'results'));\n    const docs = querySnapshot.docs;\n    this._setDistinctDates(docs);\n\n    const gameType = this._gameType.value || '四麻';\n    // 日付を選択していない場合は最初の日付を選択する\n    const targetDate = this._date.value || this.distinctDates[0];\n    this._date.value = targetDate;\n    this._date.selectedIndex = this.distinctDates.indexOf(targetDate);\n\n    docs.sort((a, b) => {\n      return a.data().gameInfo.order < b.data().gameInfo.order ? -1 : 1;\n    });\n\n    const playerPoints = new Map<string, number>();\n    docs.forEach((doc) => {\n      // ゲームタイプと日付が一致するデータのみを抽出\n      if (\n        doc.data().gameInfo.gameType !== gameType ||\n        doc.data().gameInfo.date !== targetDate\n      ) {\n        return;\n      }\n      const results = doc.data().results.sort((a: Result, b: Result) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      const players = results.map((result: Result) => result.player).join();\n      // メンツごとに結果を保存\n      if (this.todaysResults.get(players)) {\n        this.todaysResults.get(players)!.push(results);\n      } else {\n        this.todaysResults.set(players, [results]);\n      }\n      // プレイヤーごとのポイントを計算\n      results.forEach((result: Result) => {\n        const point = playerPoints.get(result.player) || 0;\n        playerPoints.set(result.player, point + result.point);\n      });\n      // チョンボ\n      const chonbo = doc.data().chonbo?.sort((a: Chonbo, b: Chonbo) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      if (chonbo?.length > 0) {\n        this.todaysChonbo.push(chonbo);\n      }\n      // 役満\n      const yakuman = doc.data().yakuman?.sort((a: Yakuman, b: Yakuman) => {\n        return a.player < b.player ? -1 : 1;\n      });\n      if (yakuman?.length > 0) {\n        this.todaysYakuman.push(yakuman);\n      }\n\n      console.log(this.todaysChonbo);\n      console.log(this.todaysYakuman);\n    });\n    // プレイヤーごとのポイントをポイント順にソートして保存\n    this.playerPoints = new Map(\n      Array.from(playerPoints).sort((a, b) => {\n        return a[1] < b[1] ? 1 : -1;\n      })\n    );\n  }\n\n  private _setDistinctDates(docs: QueryDocumentSnapshot[]) {\n    this.distinctDates = [];\n    const dates = docs.map((doc) => {\n      if (doc.data().gameInfo.gameType !== this._gameType.value) {\n        return '';\n      }\n      return doc.data().gameInfo.date;\n    });\n    const distinctDates = [...new Set(dates)];\n    this.distinctDates = distinctDates.sort((a: string, b: string) => {\n      return a < b ? 1 : -1;\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mahjong-today': MahjongToday;\n  }\n}\n"]}